apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: repository
    - name: branch
    - name: revision
    - name: apikey
    - name: resource-prefix
    - name: resource-group
    - name: region
  workspaces:
  - name: pipeline-pvc
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: "" # don't pass the branch, we want to checkout a specific commit
        - name: revision
          value: $(params.revision)
        - name: git-credentials-json-file
          value: .git-credentials.json
      workspaces:
      - name: output
        workspace: pipeline-pvc
    - name: create-or-update-schematics-workspace
      taskRef:
        name: ibmcloud-cli
      runAfter: [clone-repo]
      params:
        - name: resource-group
          value: $(params.resource-group)
        - name: region
          value: $(params.region)
        - name: pipeline-debug
          value: "1"
        - name: script
          value: |
            SCHEMATICS_WORKSPACE_NAME="$(params.resource-prefix)-schematics"
            echo '{
              "name": "'$SCHEMATICS_WORKSPACE_NAME'",
              "type": [
                "terraform_v0.13"
              ],
              "location": "'$IBM_CLOUD_REGION'",
              "description": "",
              "tags": [ "terraform" ],
              "resource_group": "$(params.resource-group)",
              "template_repo":
                {
                  "url": "$(params.repository)",
                  "branch": "$(params.branch)",
                  "full_url": "$(params.repository)/tree/$(params.branch)/terraform",
                  "has_uploadedgitrepotar": false
                },
              "template_data": [
                {
                  "type": "terraform_v0.13",
                  "folder": "terraform",
                  "variablestore": [
                    {
                      "name": "apikey",
                      "value": "'$PIPELINE_BLUEMIX_API_KEY'",
                      "secure": true
                    },
                    {
                      "name": "region",
                      "value": "'$IBM_CLOUD_REGION'"
                    },
                    {
                      "name": "resource-prefix",
                      "value": "$(params.resource-prefix)"
                    },
                    {
                      "name": "resource-group",
                      "value": "$(params.resource-group)"
                    }
                  ]
                }
              ]
            }' > /tmp/workspace-update.json

            SCHEMATICS_WORKSPACE_LIST_JSON=$(ibmcloud schematics workspace list --output json)
            SCHEMATICS_WORKSPACE_ID=$(echo $SCHEMATICS_WORKSPACE_LIST_JSON | jq -r '.workspaces | .[]? | select(.resource_group=="$(params.resource-group)" and .name=="'$SCHEMATICS_WORKSPACE_NAME'") | .id')
            if [[ -z "$SCHEMATICS_WORKSPACE_ID" ]]; then
              echo "Workspace $SCHEMATICS_WORKSPACE_NAME not found"
              WORKSPACE_JSON=$(ibmcloud schematics workspace new --file /tmp/workspace-update.json --output json)
              SCHEMATICS_WORKSPACE_ID=$(echo $WORKSPACE_JSON | jq -r .id)
            else
              echo "Workspace already exists"
              ibmcloud schematics workspace update --id $SCHEMATICS_WORKSPACE_ID --file /tmp/workspace-update.json
            fi
            echo "$SCHEMATICS_WORKSPACE_ID" > /artifacts/workspace-id.json
      workspaces:
      - name: artifacts
        workspace: pipeline-pvc
